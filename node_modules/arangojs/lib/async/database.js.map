{"version":3,"file":"database.js","sourceRoot":"","sources":["../../src/database.ts"],"names":[],"mappings":"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","sourcesContent":["import { AqlLiteral, AqlQuery, isAqlLiteral, isAqlQuery } from \"./aql-query\";\nimport {\n  ArangoCollection,\n  constructCollection,\n  DocumentCollection,\n  EdgeCollection,\n  isArangoCollection\n} from \"./collection\";\nimport { Config, Connection } from \"./connection\";\nimport { ArrayCursor } from \"./cursor\";\nimport { Graph } from \"./graph\";\nimport { Route } from \"./route\";\nimport { btoa } from \"./util/btoa\";\nimport { toForm } from \"./util/multipart\";\n\nfunction colToString(collection: string | ArangoCollection): string {\n  if (isArangoCollection(collection)) {\n    return String(collection.name);\n  } else return String(collection);\n}\n\nexport type CollectionName =\n  | string\n  | { isArangoCollection: true; name: string };\nexport type TransactionCollections = {\n  write?: CollectionName | CollectionName[];\n  read?: CollectionName | CollectionName[];\n};\nexport type TrCols = CollectionName | CollectionName[] | TransactionCollections;\n\nexport type TransactionOptions = {\n  lockTimeout?: number;\n  maxTransactionSize?: number;\n  intermediateCommitCount?: number;\n  intermediateCommitSize?: number;\n  waitForSync?: boolean;\n};\n\nexport type ServiceOptions = {\n  [key: string]: any;\n  configuration?: { [key: string]: any };\n  dependencies?: { [key: string]: any };\n};\n\nconst DATABASE_NOT_FOUND = 1228;\nexport class Database {\n  private _connection: Connection;\n\n  constructor(config?: Config) {\n    this._connection = new Connection(config);\n    this.useBasicAuth();\n  }\n\n  get name(): string | null {\n    return this._connection.getDatabaseName() || null;\n  }\n\n  route(path?: string, headers?: Object): Route {\n    return new Route(this._connection, path, headers);\n  }\n\n  async acquireHostList() {\n    if (!this._connection.getDatabaseName()) {\n      throw new Error(\"Cannot acquire host list with absolute URL\");\n    }\n    const urls: string[] = await this._connection.request(\n      { path: \"/_api/cluster/endpoints\" },\n      res => res.body.endpoints.map((endpoint: any) => endpoint.endpoint)\n    );\n    this._connection.addToHostList(urls);\n  }\n\n  // Database manipulation\n\n  useDatabase(databaseName: string) {\n    this._connection.setDatabaseName(databaseName);\n    return this;\n  }\n\n  useBearerAuth(token: string) {\n    this._connection.setHeader(\"authorization\", `Bearer ${token}`);\n    return this;\n  }\n\n  useBasicAuth(username: string = \"root\", password: string = \"\") {\n    this._connection.setHeader(\n      \"authorization\",\n      `Basic ${btoa(`${username}:${password}`)}`\n    );\n    return this;\n  }\n\n  get() {\n    return this._connection.request(\n      { path: \"/_api/database/current\" },\n      res => res.body.result\n    );\n  }\n\n  exists(): Promise<boolean> {\n    return this.get().then(\n      () => true,\n      err => {\n        if (err.errorNum !== DATABASE_NOT_FOUND) {\n          throw err;\n        }\n        return false;\n      }\n    );\n  }\n\n  createDatabase(databaseName: string, users?: string[]) {\n    return this._connection.request(\n      {\n        method: \"POST\",\n        path: \"/_api/database\",\n        body: { users, name: databaseName }\n      },\n      res => res.body\n    );\n  }\n\n  listDatabases() {\n    return this._connection.request(\n      { path: \"/_api/database\" },\n      res => res.body.result\n    );\n  }\n\n  listUserDatabases() {\n    return this._connection.request(\n      { path: \"/_api/database/user\" },\n      res => res.body.result\n    );\n  }\n\n  dropDatabase(databaseName: string) {\n    return this._connection.request(\n      {\n        method: \"DELETE\",\n        path: `/_api/database/${databaseName}`\n      },\n      res => res.body\n    );\n  }\n\n  // Collection manipulation\n\n  collection(collectionName: string) {\n    return new DocumentCollection(this._connection, collectionName);\n  }\n\n  edgeCollection(collectionName: string) {\n    return new EdgeCollection(this._connection, collectionName);\n  }\n\n  listCollections(excludeSystem: boolean = true) {\n    return this._connection.request(\n      {\n        path: \"/_api/collection\",\n        qs: { excludeSystem }\n      },\n      res =>\n        this._connection.arangoMajor <= 2\n          ? res.body.collections\n          : res.body.result\n    );\n  }\n\n  async collections(excludeSystem: boolean = true) {\n    const collections = await this.listCollections(excludeSystem);\n    return collections.map((data: any) =>\n      constructCollection(this._connection, data)\n    );\n  }\n\n  async truncate(excludeSystem: boolean = true) {\n    const collections = await this.listCollections(excludeSystem);\n    return await Promise.all(\n      collections.map((data: any) =>\n        this._connection.request(\n          {\n            method: \"PUT\",\n            path: `/_api/collection/${data.name}/truncate`\n          },\n          res => res.body\n        )\n      )\n    );\n  }\n\n  // Graph manipulation\n\n  graph(graphName: string) {\n    return new Graph(this._connection, graphName);\n  }\n\n  listGraphs() {\n    return this._connection.request(\n      { path: \"/_api/gharial\" },\n      res => res.body.graphs\n    );\n  }\n\n  async graphs() {\n    const graphs = await this.listGraphs();\n    return graphs.map((data: any) => this.graph(data._key));\n  }\n\n  // Queries\n\n  transaction(\n    collections: CollectionName | CollectionName[] | TransactionCollections,\n    action: string\n  ): Promise<any>;\n  transaction(\n    collections: CollectionName | CollectionName[] | TransactionCollections,\n    action: string,\n    params?: Object\n  ): Promise<any>;\n  transaction(\n    collections: CollectionName | CollectionName[] | TransactionCollections,\n    action: string,\n    params?: Object,\n    options?: TransactionOptions\n  ): Promise<any>;\n  transaction(\n    collections: CollectionName | CollectionName[] | TransactionCollections,\n    action: string,\n    lockTimeout?: number\n  ): Promise<any>;\n  transaction(\n    collections: CollectionName | CollectionName[] | TransactionCollections,\n    action: string,\n    params?: Object,\n    lockTimeout?: number\n  ): Promise<any>;\n  transaction(\n    collections: CollectionName | CollectionName[] | TransactionCollections,\n    action: string,\n    params?: Object | number,\n    options?: TransactionOptions | number\n  ): Promise<any> {\n    if (typeof params === \"number\") {\n      options = params;\n      params = undefined;\n    }\n    if (typeof options === \"number\") {\n      options = { lockTimeout: options };\n    }\n    if (typeof collections === \"string\") {\n      collections = { write: [collections] };\n    } else if (Array.isArray(collections)) {\n      collections = { write: collections.map(colToString) };\n    } else if (isArangoCollection(collections)) {\n      collections = { write: colToString(collections) };\n    } else if (collections && typeof collections === \"object\") {\n      collections = { ...collections };\n      if (collections.read) {\n        if (!Array.isArray(collections.read)) {\n          collections.read = colToString(collections.read);\n        } else collections.read = collections.read.map(colToString);\n      }\n      if (collections.write) {\n        if (!Array.isArray(collections.write)) {\n          collections.write = colToString(collections.write);\n        } else collections.write = collections.write.map(colToString);\n      }\n    }\n    return this._connection.request(\n      {\n        method: \"POST\",\n        path: \"/_api/transaction\",\n        body: {\n          collections,\n          action,\n          params,\n          ...options\n        }\n      },\n      res => res.body.result\n    );\n  }\n\n  query(query: string | AqlQuery | AqlLiteral): Promise<ArrayCursor>;\n  query(query: AqlQuery, opts?: any): Promise<ArrayCursor>;\n  query(\n    query: string | AqlLiteral,\n    bindVars?: any,\n    opts?: any\n  ): Promise<ArrayCursor>;\n  query(\n    query: string | AqlQuery | AqlLiteral,\n    bindVars?: any,\n    opts?: any\n  ): Promise<ArrayCursor> {\n    if (isAqlQuery(query)) {\n      opts = bindVars;\n      bindVars = query.bindVars;\n      query = query.query;\n    } else if (isAqlLiteral(query)) {\n      query = query.toAQL();\n    }\n    return this._connection.request(\n      {\n        method: \"POST\",\n        path: \"/_api/cursor\",\n        body: { ...opts, query, bindVars }\n      },\n      res => new ArrayCursor(this._connection, res.body, res.host)\n    );\n  }\n\n  // Function management\n\n  listFunctions() {\n    return this._connection.request(\n      { path: \"/_api/aqlfunction\" },\n      res => res.body\n    );\n  }\n\n  createFunction(name: string, code: string) {\n    return this._connection.request(\n      {\n        method: \"POST\",\n        path: \"/_api/aqlfunction\",\n        body: { name, code }\n      },\n      res => res.body\n    );\n  }\n\n  dropFunction(name: string, group: boolean = false) {\n    return this._connection.request(\n      {\n        method: \"DELETE\",\n        path: `/_api/aqlfunction/${name}`,\n        body: { group }\n      },\n      res => res.body\n    );\n  }\n\n  // Service management\n\n  listServices() {\n    return this._connection.request({ path: \"/_api/foxx\" }, res => res.body);\n  }\n\n  async installService(mount: string, source: any, opts: ServiceOptions = {}) {\n    const { configuration, dependencies, ...qs } = opts;\n    const req = await toForm({\n      configuration,\n      dependencies,\n      source\n    });\n    return await this._connection.request(\n      {\n        ...req,\n        method: \"POST\",\n        path: \"/_api/foxx\",\n        isBinary: true,\n        qs: { ...qs, mount }\n      },\n      res => res.body\n    );\n  }\n\n  async upgradeService(mount: string, source: any, opts: ServiceOptions = {}) {\n    const { configuration, dependencies, ...qs } = opts;\n    const req = await toForm({\n      configuration,\n      dependencies,\n      source\n    });\n    return await this._connection.request(\n      {\n        ...req,\n        method: \"PATCH\",\n        path: \"/_api/foxx/service\",\n        isBinary: true,\n        qs: { ...qs, mount }\n      },\n      res => res.body\n    );\n  }\n\n  async replaceService(mount: string, source: any, opts: ServiceOptions = {}) {\n    const { configuration, dependencies, ...qs } = opts;\n    const req = await toForm({\n      configuration,\n      dependencies,\n      source\n    });\n    return await this._connection.request(\n      {\n        ...req,\n        method: \"PUT\",\n        path: \"/_api/foxx/service\",\n        isBinary: true,\n        qs: { ...qs, mount }\n      },\n      res => res.body\n    );\n  }\n\n  uninstallService(mount: string, opts: any = {}): Promise<void> {\n    return this._connection.request(\n      {\n        method: \"DELETE\",\n        path: \"/_api/foxx/service\",\n        qs: { ...opts, mount }\n      },\n      () => undefined\n    );\n  }\n\n  getService(mount: string) {\n    return this._connection.request(\n      {\n        path: \"/_api/foxx/service\",\n        qs: { mount }\n      },\n      res => res.body\n    );\n  }\n\n  async getServiceConfiguration(mount: string, minimal: boolean = false) {\n    const result = await this._connection.request(\n      {\n        path: \"/_api/foxx/configuration\",\n        qs: { mount, minimal }\n      },\n      res => res.body\n    );\n    if (\n      !minimal ||\n      !Object.keys(result).every((key: string) => result[key].title)\n    )\n      return result;\n    const values: any = {};\n    for (const key of Object.keys(result)) {\n      values[key] = result[key].current;\n    }\n    return values;\n  }\n\n  async updateServiceConfiguration(\n    mount: string,\n    cfg: any,\n    minimal: boolean = false\n  ) {\n    const result = await this._connection.request(\n      {\n        method: \"PATCH\",\n        path: \"/_api/foxx/configuration\",\n        body: cfg,\n        qs: { mount, minimal }\n      },\n      res => res.body\n    );\n    if (\n      minimal ||\n      !result.values ||\n      !Object.keys(result.values).every(\n        (key: string) => result.values[key].title\n      )\n    ) {\n      return result;\n    }\n    const result2 = await this.getServiceConfiguration(mount, minimal);\n    if (result.warnings) {\n      for (const key of Object.keys(result2)) {\n        result2[key].warning = result.warnings[key];\n      }\n    }\n    return result2;\n  }\n\n  async replaceServiceConfiguration(\n    mount: string,\n    cfg: any,\n    minimal: boolean = false\n  ) {\n    const result = await this._connection.request(\n      {\n        method: \"PUT\",\n        path: \"/_api/foxx/configuration\",\n        body: cfg,\n        qs: { mount, minimal }\n      },\n      res => res.body\n    );\n    if (\n      minimal ||\n      !result.values ||\n      !Object.keys(result.values).every(\n        (key: string) => result.values[key].title\n      )\n    ) {\n      return result;\n    }\n    const result2 = await this.getServiceConfiguration(mount, minimal);\n    if (result.warnings) {\n      for (const key of Object.keys(result2)) {\n        result2[key].warning = result.warnings[key];\n      }\n    }\n    return result2;\n  }\n\n  async getServiceDependencies(mount: string, minimal: boolean = false) {\n    const result = await this._connection.request(\n      {\n        path: \"/_api/foxx/dependencies\",\n        qs: { mount, minimal }\n      },\n      res => res.body\n    );\n    if (\n      !minimal ||\n      !Object.keys(result).every((key: string) => result[key].title)\n    )\n      return result;\n    const values: any = {};\n    for (const key of Object.keys(result)) {\n      values[key] = result[key].current;\n    }\n    return values;\n  }\n\n  async updateServiceDependencies(\n    mount: string,\n    cfg: any,\n    minimal: boolean = false\n  ) {\n    const result = await this._connection.request(\n      {\n        method: \"PATCH\",\n        path: \"/_api/foxx/dependencies\",\n        body: cfg,\n        qs: { mount, minimal }\n      },\n      res => res.body\n    );\n    if (\n      minimal ||\n      !result.values ||\n      !Object.keys(result.values).every(\n        (key: string) => result.values[key].title\n      )\n    ) {\n      return result;\n    }\n    const result2 = await this.getServiceDependencies(mount, minimal);\n    if (result.warnings) {\n      for (const key of Object.keys(result2)) {\n        result2[key].warning = result.warnings[key];\n      }\n    }\n    return result2;\n  }\n\n  async replaceServiceDependencies(\n    mount: string,\n    cfg: { [key: string]: string },\n    minimal: boolean = false\n  ) {\n    const result = await this._connection.request(\n      {\n        method: \"PUT\",\n        path: \"/_api/foxx/dependencies\",\n        body: cfg,\n        qs: { mount, minimal }\n      },\n      res => res.body\n    );\n    if (\n      minimal ||\n      !result.values ||\n      !Object.keys(result.values).every(\n        (key: string) => result.values[key].title\n      )\n    ) {\n      return result;\n    }\n    const result2 = await this.getServiceDependencies(mount, minimal);\n    if (result.warnings) {\n      for (const key of Object.keys(result2)) {\n        result2[key].warning = result.warnings[key];\n      }\n    }\n    return result2;\n  }\n\n  enableServiceDevelopmentMode(mount: string) {\n    return this._connection.request(\n      {\n        method: \"POST\",\n        path: \"/_api/foxx/development\",\n        qs: { mount }\n      },\n      res => res.body\n    );\n  }\n\n  disableServiceDevelopmentMode(mount: string) {\n    return this._connection.request(\n      {\n        method: \"DELETE\",\n        path: \"/_api/foxx/development\",\n        qs: { mount }\n      },\n      res => res.body\n    );\n  }\n\n  listServiceScripts(mount: string) {\n    return this._connection.request(\n      {\n        path: \"/_api/foxx/scripts\",\n        qs: { mount }\n      },\n      res => res.body\n    );\n  }\n\n  runServiceScript(mount: string, name: string, args: any): Promise<any> {\n    return this._connection.request(\n      {\n        method: \"POST\",\n        path: `/_api/foxx/scripts/${name}`,\n        body: args,\n        qs: { mount }\n      },\n      res => res.body\n    );\n  }\n\n  runServiceTests(mount: string, opts: any): Promise<any> {\n    return this._connection.request(\n      {\n        method: \"POST\",\n        path: \"/_api/foxx/tests\",\n        qs: {\n          ...opts,\n          mount\n        }\n      },\n      res => res.body\n    );\n  }\n\n  getServiceReadme(mount: string): Promise<string | undefined> {\n    return this._connection.request(\n      {\n        path: \"/_api/foxx/readme\",\n        qs: { mount }\n      },\n      res => res.body\n    );\n  }\n\n  getServiceDocumentation(mount: string): Promise<any> {\n    return this._connection.request(\n      {\n        path: \"/_api/foxx/swagger\",\n        qs: { mount }\n      },\n      res => res.body\n    );\n  }\n\n  downloadService(mount: string): Promise<Buffer | Blob> {\n    return this._connection.request(\n      {\n        method: \"POST\",\n        path: \"/_api/foxx/download\",\n        qs: { mount },\n        expectBinary: true\n      },\n      res => res.body\n    );\n  }\n\n  commitLocalServiceState(replace: boolean = false): Promise<void> {\n    return this._connection.request(\n      {\n        method: \"POST\",\n        path: \"/_api/foxx/commit\",\n        qs: { replace }\n      },\n      () => undefined\n    );\n  }\n\n  version(): Promise<any> {\n    return this._connection.request(\n      {\n        method: \"GET\",\n        path: \"/_api/version\"\n      },\n      res => res.body\n    );\n  }\n\n  login(username: string = \"root\", password: string = \"\"): Promise<string> {\n    return this._connection.request(\n      {\n        method: \"POST\",\n        path: \"/_open/auth\",\n        body: { username, password }\n      },\n      res => {\n        this.useBearerAuth(res.body.jwt);\n        return res.body.jwt;\n      }\n    );\n  }\n}\n"]}